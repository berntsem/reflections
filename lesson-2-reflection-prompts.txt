What happens when you initialize a repository? Why do you need to do it?

It creates an empty repository that you can then commit different files to. You need it to be able to
create a repository from the command line.

How is the staging area different from the working directory and the repository?

It shows files that are ready to be committed but have not been yet. 

What value do you think it offers?

You can double check your changes and make sure you really want to commit them.

How can you use the staging area to make sure you have one commit per logical
change?

You can check what has been added and decide what to commit based on what you see.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

You can use branhces to change specific parts of code or to work on something you're not sure you'll want in the master. Branches
make it easy to stay organized. 

How do the diagrams help you visualize the branch structure?

It shows how the branches are different and that their commits are different as well.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

It will put the changes from both branches and merge into one file. To better visualize what is actaully happening.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

Automatic is fast and simple. Manually is slow but you can double check everything you want stays in.