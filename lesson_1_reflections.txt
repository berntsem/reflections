1. How did viewing a diff between two versions of a file help you see the bug that was introduced?

It helped me because I was shown what the differences were and I didn't have to search line by line. 
It was quick and not prone to errors as I would've been if I would've been searching myself.

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It is easy to make a lot of changes and then have my code blow up and lose track of what exactly
was changed. Being able to see previous versions will make it so I can go back and see the differences.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having 
versions automatically saved, like Google Docs does?

Pros are that you can make sure your code is working and at a good stopping point when committing. Cons 
are that it is easy to get lost in your work and forget to commit.

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?

The files can be connected so it is important to be able to see all of the changes. 

5. How can you use the commands git log and git diff to view the history of files?

git log can be used to see all the commits in the other they were made and their comments. git diff 
can be used to compare two commits and see what the differences are. 

6. How might using version control make you more confident to make changes that could break something?

Once you commit a working code that version is saved and you can always go back to it even when you make 
new changes that break the code. 

7. Now that you have your workspace set up, what do you want to try using Git for?

I want to use it to collaborate with others on code.